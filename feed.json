{
    "version": "https://jsonfeed.org/version/1",
    "title": "羊姥苑工作室的部落格 Sheepht&#x27;s Blog",
    "description": "",
    "home_page_url": "https://blog.sheepht.com",
    "feed_url": "https://blog.sheepht.com/feed.json",
    "user_comment": "",
    "icon": "https://blog.sheepht.com/media/website/sheepht-700-transparent.png",
    "author": {
        "name": "sheepht"
    },
    "items": [
        {
            "id": "https://blog.sheepht.com/cursor-talk-to-figma-mcp.html",
            "url": "https://blog.sheepht.com/cursor-talk-to-figma-mcp.html",
            "title": "Cursor Talk To Figma MCP 實測心得",
            "summary": "先說我的感想：設計師還是非常重要的，美感不是一天養成🥺 最近想重新設計工作室的網站，剛好看到社群在討論 Figma MCP，就想試試看： 如果讓語言模型接上 MCP，能不能幫我生出一版「令人驚豔」的網站設計？ 於是我開啟 Cursor，讓它接上 Figma MCP plugin，結果⋯⋯只能說，是一次相當悽慘的體驗。 整個過程我沒有自己動手設計畫面，只有在&hellip;",
            "content_html": "<blockquote data-pm-slice=\"2 1 []\">\n<p>先說我的感想：設計師還是非常重要的，美感不是一天養成🥺</p>\n</blockquote>\n<p>最近想重新設計工作室的網站，剛好看到社群在討論 Figma MCP，就想試試看： 如果讓語言模型接上 MCP，能不能幫我生出一版「令人驚豔」的網站設計？</p>\n<p>於是我開啟 Cursor，讓它接上 Figma MCP plugin，結果⋯⋯只能說，是一次相當悽慘的體驗。</p>\n<p>整個過程我沒有自己動手設計畫面，只有在 <code>.cursor/</code> 底下放了一些工作室品牌定義檔，包含主色、輔色、偏好等，然後對 Cursor 說：「幫我設計羊姥苑工作室的網站」，然後... 就沒有然後了(誤</p>\n<p> </p>\n<div><hr></div>\n<h2>如果你不知道 MCP 是什麼？</h2>\n<p>MCP（Model Context Protocol）是一種讓 AI 模型能夠即時地存取外部工具或資料的協定。你可以把它想成「給 AI 一個工具箱」，模型只要透過自然語言，就可以呼叫 API 或觸發動作。<br><br>這裡也有更清楚的解釋：<a href=\"https://www.bnext.com.tw/article/82706/what-is-mcp?\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.bnext.com.tw/article/82706/what-is-mcp</a></p>\n<div><hr></div>\n<h2>前置準備</h2>\n<h3 data-pm-slice=\"1 1 []\">1. 安裝 Bun</h3>\n<p>MAC / Linux</p>\n<pre class=\"language-bash\"><code>curl -fsSL https://bun.sh/install | bash</code></pre>\n<p>Windows</p>\n<pre class=\"language-bash\"><code>powershell -c \"irm bun.sh/install.ps1|iex\"</code></pre>\n<h3 data-pm-slice=\"1 1 []\">2. 打開 Figma 安裝 Cursor Talk To Figma Plugin</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/7/1.png\" alt=\"\" width=\"835\" height=\"692\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/1-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/1-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/1-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/1-xl.webp 1024w\"></figure>\n<h3 data-pm-slice=\"1 1 []\">3. 安裝 cursor talk to figma mcp</h3>\n<pre class=\"language-bash\"><code>bunx cursor-talk-to-figma-socket</code></pre>\n<p>應該會看到這樣的回應</p>\n<p><code>WebSocket server running on port 3055</code><br><code>New client connected</code></p>\n<h3 data-pm-slice=\"1 1 []\">4. 回到 Figma Plugin 按下 Connect 確認連線成功</h3>\n<p>並且把這一段複製下來我們準備拿到 Cursor 設定使用</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/7/2.png\" alt=\"\" width=\"349\" height=\"643\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/2-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/2-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/2-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/2-xl.webp 1024w\"></figure>\n<h3 data-pm-slice=\"1 1 []\">５. 打開 Cursor 設定 mcp.json</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/7/3.png\" alt=\"\" width=\"890\" height=\"906\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/3-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/3-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/3-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/3-xl.webp 1024w\"></figure>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/7/4.png\" alt=\"\" width=\"1814\" height=\"462\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/4-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/4-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/4-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/4-xl.webp 1024w\"></figure>\n<p>把剛剛複製的那段 code 貼過來</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/7/5-2.png\" alt=\"\" width=\"571\" height=\"387\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/5-2-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/5-2-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/5-2-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/5-2-xl.webp 1024w\"></figure>\n<p>回到 MCP Servers 就會看到新增成功的 TalkToFigma 了<br>如果沒有亮綠燈的話，請關掉 Cursor 重新開啟，或者是重新整理試試</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/7/6.png\" alt=\"\" width=\"1395\" height=\"372\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/6-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/6-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/6-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/6-xl.webp 1024w\"></figure>\n<h3 data-pm-slice=\"1 1 []\">恭喜，現在你的 Cursor Talk To Figma 已經設定成功了！</h3>\n<p>接著就可以在 Cursor 用 Agent 下指令操作 Figma <br>必須先告訴 Cursor 頻道是哪一個（一樣是從前面的 Figma Plugin 獲取）</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/7/7.png\" alt=\"\" width=\"1812\" height=\"1872\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/7-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/7-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/7-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/7-xl.webp 1024w\"></figure>\n<hr>\n<h2 data-pm-slice=\"1 1 []\">操作流程</h2>\n<h3>💬 我是怎麼跟 Cursor 說的</h3>\n<ul>\n<li><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">依照 .cursor/spec 裡面的網站架構設計羊姥苑工作室網站</span></li>\n<li>左上角加上 logo</li>\n<li>畫面上需要增加適合情境的插圖</li>\n</ul>\n<h3>🔍 Cursor 實際做了什麼？</h3>\n<ul>\n<li data-pm-slice=\"1 1 [&quot;list&quot;,{&quot;spread&quot;:false,&quot;start&quot;:895,&quot;end&quot;:998},&quot;regular_list_item&quot;,{&quot;start&quot;:895,&quot;end&quot;:921}]\">把語句拆解為一連串 MCP <code>/call</code> 呼叫</li>\n<li data-pm-slice=\"1 1 [&quot;list&quot;,{&quot;spread&quot;:false,&quot;start&quot;:895,&quot;end&quot;:998},&quot;regular_list_item&quot;,{&quot;start&quot;:963,&quot;end&quot;:998}]\">畫面也會在 Figma 中即時更新，像是自己在那邊慢慢排版一樣</li>\n<li>每次改動都會對應到一次 MCP <code>/call</code> 呼叫，從 Cursor 右側也可以看到完整紀錄</li>\n</ul>\n<h3 data-pm-slice=\"1 3 []\">⚠️ 限制 / 踩雷處：</h3>\n<ul>\n<li data-pm-slice=\"1 1 [&quot;list&quot;,{&quot;spread&quot;:false,&quot;start&quot;:1205,&quot;end&quot;:1282},&quot;regular_list_item&quot;,{&quot;start&quot;:1205,&quot;end&quot;:1249}]\">如果同一句話裡描述邏輯太複雜，會出現「只做一半」的情況</li>\n<li data-pm-slice=\"1 1 [&quot;list&quot;,{&quot;spread&quot;:false,&quot;start&quot;:1205,&quot;end&quot;:1282},&quot;regular_list_item&quot;,{&quot;start&quot;:1250,&quot;end&quot;:1282}]\">用來排版 layout 可以，但是產生設計以及圖片的能力不足</li>\n</ul>\n<hr>\n<h2 data-pm-slice=\"1 1 []\">結語</h2>\n<p>這次實驗的結果，老實說不太理想。</p>\n<p>雖然 MCP 能讓模型精確控制版面配置，但實際上生成出來的畫面仍非常粗糙，距離一個「可用的設計」還有一大段距離。</p>\n<p>目前它頂多能幫你把結構搭起來，像是「左邊放 logo、右邊兩顆按鈕」，這種區塊級的排版；但當需要涉及美術圖、視覺語言、動線與互動節奏時，它還是無法勝任。</p>\n<p>這不是設計師的替代品，而是另一種「草稿起點」的工具。</p>\n<p>讓不熟 Figma 的人可以快速生成一個初稿，然後交由設計師來延伸與修正。這樣的協作方式，也許是它目前比較實際的定位。</p>\n<hr>\n<h2 data-pm-slice=\"1 1 []\">同場加映 - Cursor Talk To Figma MCP 與 Figma AI 生成結果對比</h2>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 49.9288%;\">Cursor Talk To Figma MCP</td>\n<td style=\"width: 49.9288%;\">Figma AI</td>\n</tr>\n<tr>\n<td style=\"width: 49.9288%;\"><figure class=\"post__image\"><img loading=\"lazy\"  style=\"outline: 3px solid rgba(var(--color-primary-rgb), 0.55) !important;\" src=\"https://blog.sheepht.com/media/posts/7/cursor_to_figma_mcp.png\" alt=\"\" width=\"383\" height=\"798\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/cursor_to_figma_mcp-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/cursor_to_figma_mcp-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/cursor_to_figma_mcp-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/cursor_to_figma_mcp-xl.webp 1024w\"></figure></td>\n<td style=\"width: 49.9288%;\"><figure class=\"post__image\"><img loading=\"lazy\"  style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal); outline: 3px solid rgba(var(--color-primary-rgb), 0.55) !important;\" src=\"https://blog.sheepht.com/media/posts/7/figma_ai.png\" alt=\"\" width=\"274\" height=\"775\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/7/responsive/figma_ai-xs.webp 320w ,https://blog.sheepht.com/media/posts/7/responsive/figma_ai-sm.webp 480w ,https://blog.sheepht.com/media/posts/7/responsive/figma_ai-md.webp 768w ,https://blog.sheepht.com/media/posts/7/responsive/figma_ai-xl.webp 1024w\"></figure></td>\n</tr>\n</tbody>\n</table>\n<p> </p>",
            "image": "https://blog.sheepht.com/media/posts/7/figma_mcp.png",
            "author": {
                "name": "黑羊 JF"
            },
            "tags": [
                   "開發",
                   "MCP",
                   "Cursor",
                   "AI"
            ],
            "date_published": "2025-04-14T13:08:59+08:00",
            "date_modified": "2025-04-15T12:23:33+08:00"
        },
        {
            "id": "https://blog.sheepht.com/from-zero-to-blog-through-publii-and-github-page.html",
            "url": "https://blog.sheepht.com/from-zero-to-blog-through-publii-and-github-page.html",
            "title": "使用 Publii + Github Page 從零開始自架部落格",
            "summary": "沒有技術背景也能輕鬆架站！用 Publii + GitHub Pages 免費打造你的個人部落格 🚀 你是不是也曾經想過：「我也想寫部落格，但我又不會寫程式，也不會搞那些主機、DNS 的東西啊……」 別擔心！今天要介紹的這個工具組合，不但完全免費，而且零技術背景也能輕鬆上手——只要會滑鼠拖拉，就能完成架設你的第一個部落格！ 我們要用到的工具是： 🔧&hellip;",
            "content_html": "<h1><strong>沒有技術背景也能輕鬆架站！用 Publii + GitHub Pages 免費打造你的個人部落格 🚀</strong></h1>\n<p class=\"p3\">你是不是也曾經想過：<code>「我也想寫部落格，但我又不會寫程式，也不會搞那些主機、DNS 的東西啊……」</code></p>\n<p class=\"p3\">別擔心！今天要介紹的這個工具組合，不但<span class=\"s2\"><strong>完全免費</strong></span>，而且<span class=\"s2\"><strong>零技術背景也能輕鬆上手</strong></span>——只要會滑鼠拖拉，就能完成架設你的第一個部落格！</p>\n<p class=\"p3\">我們要用到的工具是：</p>\n<p>🔧 <span class=\"s2\"><strong>Publii</strong></span>：一款免費的離線部落格製作工具<br>☁️ <span class=\"s2\"><strong>GitHub Pages</strong></span>：免費的網站空間，只要有帳號就能用</p>\n<hr>\n<h2><strong>一、什麼是 Publii？為什麼推薦它？</strong></h2>\n<p class=\"p3\"><span class=\"s2\"><strong>Publii</strong></span> 是一套免費桌面應用程式（支援 Windows / macOS / Linux），可以幫你建立一個現代化、有質感的靜態網站。<code>你不用寫任何一行程式碼，像寫 Word 一樣輸入文章內容，再點幾下滑鼠就能發佈。</code></p>\n<p class=\"p3\">特色：</p>\n<p>✅ 完全免費<br>✅ 支援離線編輯，不用開網頁就能寫文章<br>✅ 超多漂亮主題可以直接套用<br>✅ 一鍵發佈到 GitHub Pages、Netlify、S3 等平台</p>\n<hr>\n<h2><strong>二、準備工作（只要做一次）</strong></h2>\n<h3><strong>步驟 1：安裝 Publii</strong></h3>\n<ol start=\"1\">\n<li>\n<p>前往官方網站：<a href=\"https://getpublii.com\">https://getpublii.com</a></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/getpublii.png\" alt=\"\" width=\"2598\" height=\"1528\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/getpublii-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/getpublii-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/getpublii-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/getpublii-xl.webp 1024w\"></figure>\n</li>\n<li>\n<figure class=\"post__image\">根據你的作業系統下載安裝檔<br><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6//Jie-Tu-2025-04-13-Xia-Wu-4.54.34.png\" alt=\"這邊就看你的作業系統是什麼就下戴什麼\" width=\"2658\" height=\"1476\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6//responsive/Jie-Tu-2025-04-13-Xia-Wu-4.54.34-xs.webp 320w ,https://blog.sheepht.com/media/posts/6//responsive/Jie-Tu-2025-04-13-Xia-Wu-4.54.34-sm.webp 480w ,https://blog.sheepht.com/media/posts/6//responsive/Jie-Tu-2025-04-13-Xia-Wu-4.54.34-md.webp 768w ,https://blog.sheepht.com/media/posts/6//responsive/Jie-Tu-2025-04-13-Xia-Wu-4.54.34-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p class=\"p1\">安裝並打開 Publii</p>\n</li>\n</ol>\n<hr>\n<h3><strong>步驟 2：建立 GitHub 帳號 &amp; Repository</strong></h3>\n<ol start=\"1\">\n<li>\n<p class=\"p1\">前往 <a href=\"https://github.com\">https://github.com</a> 註冊帳號</p>\n</li>\n<li>\n<p class=\"p1\">登入後，點選右上角 ➕ &gt; New repository</p>\n</li>\n<li>\n<p class=\"p1\">Repository 名稱請取成：<span class=\"s1\">你的帳號.github.io</span>（這是 GitHub Pages 的規則）</p>\n</li>\n<li>\n<p class=\"p1\">其它選項可以保持預設，點「Create repository」</p>\n</li>\n</ol>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/github-new-repo-2.png\" alt=\"\" width=\"1560\" height=\"1510\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/github-new-repo-2-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/github-new-repo-2-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/github-new-repo-2-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/github-new-repo-2-xl.webp 1024w\"></figure>\n<hr>\n<h2><strong>三、開始用 Publii 建立你的部落格</strong></h2>\n<h3><strong>步驟 1：建立新網站</strong></h3>\n<ol start=\"1\">\n<li>\n<p>開啟 Publii，點擊「Create a new website」</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/add-new-website.png\" alt=\"\" width=\"2364\" height=\"1336\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/add-new-website-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/add-new-website-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/add-new-website-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/add-new-website-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p>輸入網站名稱</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/create-new-website-field.png\" alt=\"\" width=\"1582\" height=\"1194\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/create-new-website-field-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/create-new-website-field-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/create-new-website-field-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/create-new-website-field-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p>建置完成應該可以看到這個畫面</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/create-new-website-done.png\" alt=\"\" width=\"3002\" height=\"1646\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/create-new-website-done-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/create-new-website-done-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/create-new-website-done-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/create-new-website-done-xl.webp 1024w\"></figure>\n</li>\n</ol>\n<hr>\n<h3><strong>步驟 2：撰寫你的第一篇文章 ✍️</strong></h3>\n<ol start=\"1\">\n<li>\n<p>點選「Posts」&gt;「New Post」</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/new-post.png\" alt=\"\" width=\"3000\" height=\"1620\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/new-post-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/new-post-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/new-post-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/new-post-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p>輸入標題、內容、封面圖片等資訊</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/done-post.png\" alt=\"\" width=\"3002\" height=\"1642\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/done-post-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/done-post-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/done-post-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/done-post-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p class=\"p1\">記得按下「Save」(你也可以選擇存成草稿稍後再發佈)</p>\n</li>\n</ol>\n<hr>\n<h3><strong>步驟 3：設定 GitHub Pages 發佈</strong></h3>\n<ol start=\"1\">\n<li>\n<p>點選左側「Server」&gt;「Github Pages」</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/server-type.png\" alt=\"\" width=\"3006\" height=\"1636\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/server-type-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/server-type-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/server-type-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/server-type-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p>輸入你的 GitHub 帳號、Repository 名稱、Email、Token（第一次需要建立）</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/github-page-setting.png\" alt=\"\" width=\"2998\" height=\"1638\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/github-page-setting-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/github-page-setting-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/github-page-setting-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/github-page-setting-xl.webp 1024w\"></figure>\n</li>\n</ol>\n<p class=\"p2\"> </p>\n<p>📌 你可以在這裡建立 Token：<a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/create-gh-token.png\" alt=\"\" width=\"2510\" height=\"1044\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/create-gh-token-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/create-gh-token-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/create-gh-token-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/create-gh-token-xl.webp 1024w\"></figure>\n<ul>\n<li>\n<p>給這個 Token 起個名字並選擇 <span class=\"s1\">repo</span> 權限</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/naming-and-repo.png\" alt=\"\" width=\"2520\" height=\"1258\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/naming-and-repo-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/naming-and-repo-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/naming-and-repo-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/naming-and-repo-xl.webp 1024w\"></figure>\n</li>\n<li>\n<figure class=\"post__image\">建立後複製下來，回 Publii 剛剛的 token 欄位儲存<br><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/copy-the-token.png\" alt=\"\" width=\"2526\" height=\"1172\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/copy-the-token-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/copy-the-token-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/copy-the-token-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/copy-the-token-xl.webp 1024w\"></figure>\n</li>\n</ul>\n<hr>\n<h3><strong>步驟 4：一鍵發佈！</strong></h3>\n<ol start=\"1\">\n<li>可以先按「Preview your changes」來預覽目前的部落格<br>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/preview-your-changes.png\" alt=\"\" width=\"3002\" height=\"1646\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/preview-your-changes-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/preview-your-changes-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/preview-your-changes-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/preview-your-changes-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p>確認沒問題後，點擊「Sync your website」</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/sync-your-website.png\" alt=\"\" width=\"2972\" height=\"1022\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/sync-your-website-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/sync-your-website-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/sync-your-website-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/sync-your-website-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p>第一次會稍久，之後都會更快</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/start-sync.png\" alt=\"\" width=\"2998\" height=\"1644\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/start-sync-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/start-sync-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/start-sync-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/start-sync-xl.webp 1024w\"></figure>\n</li>\n<li>\n<p class=\"p1\"><span class=\"s1\">完成後，你就可以用網址 </span>https://[你的帳號].github.io<span class=\"s1\"> 開啟網站啦！<br></span></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://blog.sheepht.com/media/posts/6/site.png\" alt=\"\" width=\"2602\" height=\"1518\" sizes=\"(min-width: 760px) 660px, calc(93.18vw - 30px)\" srcset=\"https://blog.sheepht.com/media/posts/6/responsive/site-xs.webp 320w ,https://blog.sheepht.com/media/posts/6/responsive/site-sm.webp 480w ,https://blog.sheepht.com/media/posts/6/responsive/site-md.webp 768w ,https://blog.sheepht.com/media/posts/6/responsive/site-xl.webp 1024w\"></figure>\n</li>\n</ol>\n<hr>\n<h2><strong>🎉 恭喜你，你的個人網站完成了！</strong></h2>\n<p class=\"p2\"> </p>\n<p class=\"p3\">現在你已經學會怎麼：</p>\n<ul>\n<li>\n<p class=\"p1\">建立一個漂亮的網站</p>\n</li>\n<li>\n<p class=\"p1\">撰寫與管理文章</p>\n</li>\n<li>\n<p class=\"p1\">發佈到 GitHub Pages，讓全世界都能看到你的創作</p>\n</li>\n</ul>\n<p class=\"p3\">最重要的是——這整個過程你<span class=\"s2\"><strong>不用寫任何程式碼</strong></span>！</p>\n<p> </p>\n<h2 data-pm-slice=\"1 1 []\">成果：羊姥苑的官方部落格</h2>\n<p><a href=\"https://pluseal.sheepht.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://blog.sheepht.com/</a></p>\n<h2 data-pm-slice=\"1 1 []\">結語：零技術背景，也能輕鬆架設部落格且免費</h2>\n<p data-pm-slice=\"1 1 []\">在 AI 時代的好處就是可以大幅降低許多技術困難點，由其在不用花錢的情況下，就要有一個免費的網域部落格，這不妨是一個不錯的選擇</p>\n<blockquote>\n<p>btw，這篇文章也幾乎都是 GPT 產的 :)</p>\n</blockquote>",
            "image": "https://blog.sheepht.com/media/posts/6/from-zero-to-blog-through-publii-and-github-page.png",
            "author": {
                "name": "白羊 sexyoung"
            },
            "tags": [
                   "開發"
            ],
            "date_published": "2025-04-13T17:11:45+08:00",
            "date_modified": "2025-04-13T20:59:26+08:00"
        },
        {
            "id": "https://blog.sheepht.com/yi-ge-wan-quan-bu-dong-nodejs-de-renye-neng-yong-cursor-xie-line-bot-ying-yong.html",
            "url": "https://blog.sheepht.com/yi-ge-wan-quan-bu-dong-nodejs-de-renye-neng-yong-cursor-xie-line-bot-ying-yong.html",
            "title": "一個完全不懂 Node.js 的人，也能用 Cursor 寫 LINE Bot 應用",
            "summary": "身為一個熟悉 Python 的開發者，過去主要在資料處理與工具開發領域打滾，但如果你問我 npm install 到底裝去哪、.ts 和 .js 差在哪裡，那真的是知識空白區 XD 這次的目標是打造一個 LINE Bot，功能簡單直接：使用者在群組中輸入「+1」「-1」，系統會自動計算報名狀況，並回報至&hellip;",
            "content_html": "<p data-pm-slice=\"1 1 []\">身為一個熟悉 Python 的開發者，過去主要在資料處理與工具開發領域打滾，但如果你問我 <code>npm install</code> 到底裝去哪、<code>.ts</code> 和 <code>.js</code> 差在哪裡，那真的是知識空白區 XD</p>\n<p>這次的目標是打造一個 LINE Bot，功能簡單直接：使用者在群組中輸入「+1」「-1」，系統會自動計算報名狀況，並回報至 LINE 群組。</p>\n<p>雖然直接可以用 Python 寫，但剛好想嘗試看看 —— 如果完全不懂的語言，只靠 Cursor，我能寫出什麼程度的東西？</p>\n<p> </p>\n<h2 data-pm-slice=\"1 1 []\">開工前的準備：先定義 Cursor 規則</h2>\n<p data-pm-slice=\"1 1 []\">一開始並沒有選用 <code>npx</code> 建立預設專案，而是直接開了資料夾，把 <code>.cursor/*.mdc</code> 寫好。</p>\n<p data-pm-slice=\"1 1 []\">這邊可以查到各語言的 Cursor Rule 範例<br><a href=\"https://github.com/PatrickJS/awesome-cursorrules\">https://github.com/PatrickJS/awesome-cursorrules</a></p>\n<p data-pm-slice=\"1 1 []\">再來是需要寫好專案的 SPEC（要做什麼、不做什麼），可以省下很多返工的時間。<br>就像寫測試前先寫好需求，AI 幫你開發時也需要類似的界線感。<br>當 Cursor 自己爆走的時候，也可以回到 SPEC 文件提醒它。</p>\n<p class=\"\" data-start=\"90\" data-end=\"114\">以下是一些建議的 <code data-start=\"99\" data-end=\"104\">.md</code> 檔案及其內容範例：</p>\n<h3 class=\"\" data-start=\"116\" data-end=\"137\"><code data-start=\"120\" data-end=\"137\">.cursor/spec.md</code></h3>\n<p class=\"\" data-start=\"138\" data-end=\"219\"><span class=\"relative -mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transition-colors duration-100 ease-in-out\">描述專案的功能需求與範圍，明確指出哪些功能需要實作。</span>​</p>\n<p class=\"\" data-start=\"221\" data-end=\"302\"><span class=\"relative -mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transition-colors duration-100 ease-in-out\">範例：</span></p>\n<pre class=\"language-markdown\"><code>## 專案目標\n建立一個 LINE Bot，使用者輸入「+1」時，系統登記報名並回報目前狀態。\n\n## 功能需求\n- 接收 LINE webhook 訊息\n- 處理「+1」與「取消」指令\n- 回報目前報名人數與暱稱清單\n- 支援重置報名清單</code></pre>\n<h3 class=\"\" data-start=\"474\" data-end=\"503\"><code data-start=\"478\" data-end=\"503\">.cursor/architecture.md</code></h3>\n<p class=\"\" data-start=\"504\" data-end=\"585\"><span class=\"relative -mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transition-colors duration-100 ease-in-out\">說明專案的架構設計，包括目錄結構、模組劃分等。</span></p>\n<p data-start=\"504\" data-end=\"585\">範例：</p>\n<pre class=\"language-markdown\"><code>## 專案架構\n- `src/`：主要程式碼目錄\n  - `handlers/`：處理各種 webhook 事件\n  - `services/`：業務邏輯處理\n  - `utils/`：工具函式\n- `tests/`：測試程式碼</code></pre>\n<h3 class=\"\" data-start=\"801\" data-end=\"828\"><code data-start=\"805\" data-end=\"828\">.cursor/styleguide.md</code></h3>\n<p class=\"\" data-start=\"829\" data-end=\"914\"><span class=\"relative -mx-px my-[-0.2rem] rounded px-px py-[0.2rem] transition-colors duration-100 ease-in-out\">定義程式碼風格與命名規範，確保 AI 生成的程式碼符合團隊標準。</span></p>\n<p data-start=\"829\" data-end=\"914\">範例：</p>\n<pre class=\"language-markdown\"><code>## 命名規範\n- 變數與函式使用 camelCase\n- 類別名稱使用 PascalCase\n- 常數使用全大寫加底線（例如：MAX_VALUE）\n\n## 程式碼風格\n- 使用 2 個空格作為縮排\n- 每行程式碼不超過 80 個字元\n- 函式應包含簡短的註解說明其功能\n</code></pre>\n<p>建議在專案初期就建立這些文件，並在開發過程中持續更新，這樣即使 AI 在生成程式碼時出現偏差，也可以透過這些文件快速校正方向。</p>\n<p> </p>\n<h2 data-pm-slice=\"1 1 []\">開發過程：用 Python 腦袋駕馭 Node.js 世界</h2>\n<p>描述需求的方式，則是延續了寫 Python 時的習慣，具備基本程式邏輯知識，跨語言開發可以使用更精準的關鍵字，只要描述得夠清楚，回傳的程式碼品質都很不錯。</p>\n<p data-pm-slice=\"1 1 []\">舉例來說：</p>\n<p data-pm-slice=\"1 1 []\">「我想記錄一組使用者的報名狀態，每個使用者都有一個 ID，並對應到一些動態資訊，例如報名時間或暱稱。像是 Python 的 Dict <code>user_id -&gt; { nickname, time }</code></p>\n<p data-pm-slice=\"1 1 []\">即使實際語法在 JS 或 TypeScript 中不同，只要能清楚表達出邏輯目的，Cursor 幾乎都能正確 map 到對應語言的語法與實作方式。</p>\n<h2 data-pm-slice=\"1 1 []\">常見踩雷：每個需求，小塊小塊處理最好</h2>\n<p data-pm-slice=\"1 1 []\">專案結構一旦搭好，就進入功能拆解流程。</p>\n<p>初期曾經嘗試一次請它實作多個功能（處理訊息、更新報名、回傳狀態），結果它直接改掉整個架構，還複製出一堆重複邏輯（不停的向後兼容😵‍💫）</p>\n<p>後來採用「一次請它處理一個功能」的方式，穩定度就高很多。</p>\n<p> </p>\n<h2 data-pm-slice=\"1 1 []\">成果：Pluseal 活動報名工具</h2>\n<p><a href=\"https://pluseal.sheepht.com/\" target=\"_blank\" rel=\"noopener noreferrer\">LINE +1 報名活動海豹 Pluseal</a> <br>是這次實驗做出來的成果</p>\n<p data-pm-slice=\"1 1 []\">在 LINE 群組中輸入「+1」、「-1」，就會自動登記活動報名、回報名單，讓主揪不用再花力氣手動計算，是個方便實用的日常小工具唷 :)</p>\n<p data-pm-slice=\"1 1 []\"> </p>\n<h2 data-pm-slice=\"1 1 []\">結語：即使對語法不熟，也能完成一個完整產品</h2>\n<p data-pm-slice=\"1 1 []\">AI 工具出現後，開發的順序已經反過來： 不是「會某個語言 → 才能做某種產品」，而是「有想法 → 定義 SPEC → 讓 AI 幫你完成技術路徑」。</p>\n<p>這次的 Pluseal 就是個範例：<br>Node.js 從 0 開始， 但靠著明確描述與善用工具，一樣能讓它跑上 Production。</p>\n<blockquote>\n<p>btw，所有使用到的圖像化元素也都是搭配 GPT 等工具生成的唷~</p>\n</blockquote>",
            "image": "https://blog.sheepht.com/media/posts/5/ChatGPT-Image-2025Nian-4Yue-12Ri-Xia-Wu-08_38_20.png",
            "author": {
                "name": "黑羊 JF"
            },
            "tags": [
                   "開發",
                   "Cursor",
                   "AI"
            ],
            "date_published": "2025-04-12T23:14:32+08:00",
            "date_modified": "2025-04-12T23:48:53+08:00"
        }
    ]
}
